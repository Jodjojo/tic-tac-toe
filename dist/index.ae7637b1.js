const boxes=document.querySelectorAll(".box"),heading=document.querySelector("#heading"),strategy=document.querySelector("#strategy"),restartBtn=document.querySelector("#restart"),spaces=[],tick_cross="X",tick_nought="O";let currentPlayer="O",winSfx=new Audio("./Sfx/winning-sfx.mp3"),drawSfx=new Audio("./Sfx/draw-sfx.mp3");boxes.forEach(((e,r)=>{e.addEventListener("click",(r=>{const n=r.target.id;if(spaces[n]||(spaces[n]=currentPlayer,e.innerHTML=currentPlayer),playerWon())return heading.innerHTML=`Player ${currentPlayer} has won this round.`,restart(),void winSfx.play();playerDraw()||(currentPlayer="O"===currentPlayer?"X":"O")}))}));const playerWon=()=>{if(spaces[0]===currentPlayer){if(spaces[1]===currentPlayer&&spaces[2]===currentPlayer)return strategy.innerHTML=`${currentPlayer} has won on the top row. ðŸ˜„`,!0;if(spaces[4]===currentPlayer&&spaces[8]===currentPlayer)return strategy.innerHTML=`${currentPlayer} has won along the diagonal. ðŸ˜„`,!0;if(spaces[3]===currentPlayer&&spaces[6]===currentPlayer)return strategy.innerHTML=`${currentPlayer} has won the left column. ðŸ˜„`,!0}if(spaces[4]===currentPlayer){if(spaces[1]===currentPlayer&&spaces[7]===currentPlayer)return strategy.innerHTML=`${currentPlayer} has won on the middle column. ðŸ˜„`,!0;if(spaces[2]===currentPlayer&&spaces[6]===currentPlayer)return strategy.innerHTML=`${currentPlayer} has won along the diagonal. ðŸ˜„`,!0;if(spaces[3]===currentPlayer&&spaces[5]===currentPlayer)return strategy.innerHTML=`${currentPlayer} has won on the middle row. ðŸ˜„`,!0}if(spaces[8]===currentPlayer){if(spaces[2]===currentPlayer&&spaces[5]===currentPlayer)return strategy.innerHTML=`${currentPlayer} has won on the right column. ðŸ˜„`,!0;if(spaces[6]===currentPlayer&&spaces[7]===currentPlayer)return strategy.innerHTML=`${currentPlayer} has won on the bottom row. ðŸ˜„`,!0}},playerDraw=()=>{let e=0;spaces.forEach(((r,n)=>{null!==spaces[n]&&e++,9===e&&(heading.innerHTML="This round was a draw.",strategy.innerHTML="Draw ðŸ¤”",restart(),drawSfx.play())}))},restart=()=>{null!=spaces&&null!==spaces.length&&spaces.length>0?setTimeout((()=>{heading.innerHTML="Play Again...",setTimeout((()=>{spaces.forEach(((e,r)=>{spaces[r]=null})),boxes.forEach((e=>{e.innerHTML=""})),heading.innerHTML="Play"}),2e3),strategy.innerHTML=""}),1800):heading.innerHTML="Play"};restartBtn.addEventListener("click",restart);
//# sourceMappingURL=index.ae7637b1.js.map
